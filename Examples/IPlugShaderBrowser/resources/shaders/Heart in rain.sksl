// Original https://www.shadertoy.com/view/ssSSDG
// Created by germain in 2021-05-25

uniform vec3 iResolution;
uniform float iTime;

const vec3 Heart_col = vec3(1.0, 0.05, 0.05);

vec2 Rain(vec2 uv, float t) {
    vec2 b = vec2(3.0, 1.0);
    vec2 bs = uv * b;

    vec2 id = floor(bs);
    bs.y += t * 0.22;
    bs.y += fract(sin(id.x * 735.23) * 772.23);
    id = floor(bs);
    bs = fract(bs) - 0.5;

    t += fract(sin(id.x * 77.35 + id.y * 1462.8) * 778.35) * 6.283;
    float y = -sin(t + sin(t + sin(t) * 0.5)) * 0.43;
    vec2 p1 = vec2(0.0, y);
    vec2 of1 = (bs - p1) / b;
    float d = length(of1);

    float m1 = smoothstep(0.08, 0.0, d);

    vec2 of2 = (fract(uv * b.x * vec2(1.0, 2.0)) - 0.5) / vec2(1.0, 2.0);
    d = length(of2);

    float m2 = smoothstep(0.25 * (0.5 - bs.y), 0.0, d) * smoothstep(-0.1, 0.1, bs.y - p1.y);
    return vec2(m1 * of1 * 30.0 + m2 * of2 * 15.0);
}

vec4 main(vec2 fragCoord) {
    // Normalized pixel coordinates, flipped vertically
    vec2 uv = (fragCoord - vec2(iResolution.x * 0.5, iResolution.y * 0.5)) / iResolution.y;
    uv.y = -uv.y; // Flip vertically

    // color (black screen)
    vec3 col = vec3(0.0);

    // Time variable
    float t = iTime;
    vec2 rainDistort = Rain(uv * 5.0, t) * 0.5;
    rainDistort += Rain(uv * 7.0, t) * 0.5;

    uv.x *= 0.7; // straightening out the heart
    uv.y -= sqrt(abs(uv.x)) * 0.5; // shaping the heart
    uv.y += 0.1; // moving the heart a little bit down
    float d = length(uv - rainDistort); // getting the distance to the center of the screen

    float c = smoothstep(0.2 + 0.1 * (t - floor(t)), 0.15, d); // cutting out a little circle using the smoothstep
    col = vec3(c * Heart_col);

    return vec4(col, 1.0);
}