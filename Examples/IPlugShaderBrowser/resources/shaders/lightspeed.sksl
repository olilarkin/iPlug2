uniform vec2 iResolution;
uniform float iTime;

vec4 main(vec2 fragCoord) {
    // Normalized pixel coordinates (from -1 to 1)
    vec2 suv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;
    
    // Radial UVs    
    vec2 uv = vec2(length(suv), atan(suv.y, suv.x));
    
    // Stars
    float offset = 0.1 * sin(uv.y * 10.0 - iTime * 0.6) * cos(uv.y * 48.0 + iTime * 0.3) * cos(uv.y * 3.7 + iTime);
    vec3 rays = vec3(sin(uv.y * 150.0 + iTime) * 0.5 + 0.5) * 
                vec3(sin(uv.y * 80.0 - iTime * 0.6) * 0.5 + 0.5) *
                vec3(sin(uv.y * 45.0 + iTime * 0.8) * 0.5 + 0.5) *
                vec3(1.0 - cos(uv.y + 22.0 * iTime - pow(uv.x + offset, 0.3) * 60.0)) *
                vec3(uv.x * 2.0);

    // Output to screen
    return vec4(rays.rg * 0.7, rays.b, 1.0);
}